global:
  imagePullSecrets:
    - name: image-secret
frontend-chart:
 image:
  repository: mosama25/route-mid-project
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "frontend"
 service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
 nginx:
    backend:
      host: mid-project-backend-chart
      port: 5000
# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
 ingress:
    enabled: true
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: frontend.local
        paths:
          - path: /
            pathType: Prefix


backend-chart:
 image:
  repository: mosama25/route-mid-project
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "backend"
 service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 5000

 config:
    DATABASE_URL: "postgresql://postgres:postgres@mid-project-postgresql:5432/postgres"

postgresql:
   auth:
    existingSecret: postgres-secret
